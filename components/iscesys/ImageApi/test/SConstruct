#!/usr/bin/env python

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# copyright: 2010 to the present, california institute of technology.
# all rights reserved. united states government sponsorship acknowledged.
# any commercial use must be negotiated with the office of technology transfer
# at the california institute of technology.
# 
# this software may be subject to u.s. export control laws. by accepting this
# software, the user agrees to comply with all applicable u.s. export laws and
# regulations. user has the responsibility to obtain export licenses,  or other
# export authority as may be required before exporting such information to
# foreign countries or providing access to foreign persons.
# 
# installation and use of this software is restricted by a license agreement
# between the licensee and the california institute of technology. it is the
# user's responsibility to abide by the terms of the license agreement.
#
# Author: Giangi Sacco
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~








import os
import sys

HOME = os.environ['HOME']

# check if python version it's >= 2.6
if ((sys.version_info[0] < 2) or ((sys.version_info[0] == 2) and (sys.version_info[1] < 6) )):
    print "Sorry. The package requires Python 2.6.x or higher"
    raise Exception

if 'SCONS_CONFIG_DIR' in os.environ:
    sconsConfigDir = os.environ['SCONS_CONFIG_DIR']
else:
    print("Error. Need to set the variable SCONS_CONFIG_DIR in the shell environment")
    raise Exception 

import sconsConfigFile

env = Environment(ENV = os.environ)
sconsSetupFile = "SConfigISCE"

sconsConfigFile.setupScons(env,sconsSetupFile)
#add some information that are necessary to build the framework such as specific includes, libpath and so on
buildDir = env['PRJ_SCONS_BUILD']
libPath = buildDir + '/libs'
#this is the directory where all the built library are put so they can easily be found diring linking
env['PRJ_LIB_DIR'] = libPath

# add the libPath to the LIBPATH environment that is where all the libs are serched
env.AppendUnique(LIBPATH = [libPath])

# add the modPath to the FORTRANMODDIR environment that is where all the fortran mods are serched

#not working yet
modPath = buildDir + '/mods'
env['FORTRANMODDIR'] =  modPath
env.AppendUnique(FORTRANPATH = [modPath])
env.AppendUnique(F90PATH = [modPath])
env.AppendUnique(F77PATH = [modPath])
#add the includes needed by the framework
imageApiInc = buildDir + '/components/iscesys/ImageApi/include'
lineAccessorInc = buildDir + '/components/isceobj/LineAccessor/include'
stdOEInc =  buildDir + '/components/iscesys/StdOE/include'
env.AppendUnique(CPPPATH = [lineAccessorInc,stdOEInc])
env.AppendUnique(LIBPATH=[os.path.join(HOME,'ISCEPck/build/libs'),'.'])
env.AppendUnique(CCFLAGS = '-g')
env.AppendUnique(CPPPATH = ['/usr/include/python2.6','./','../InterleavedAccessor/include','../DataAccessor/include','../DataCaster/include','../Factories/include'])
#env.Program('driver.ex',['driver.cpp','../InterleavedAccessor/src/InterleavedAccessor.cpp','../InterleavedAccessor/src/BSQAccessor.cpp','../InterleavedAccessor/src/BILAccessor.cpp','../InterleavedAccessor/src/BIPAccessor.cpp','../DataAccessor/src/DataAccessor.cpp','../DataAccessor/src/DataAccessorCaster.cpp','../DataAccessor/src/DataAccessorNoCaster.cpp','../DataCaster/src/DoubleToFloatCaster.cpp','../DataCaster/src/FloatToDoubleCaster.cpp','../Factories/src/CasterFactory.cpp','../Factories/src/InterleavedFactory.cpp','../Factories/src/AccessorFactory.cpp'])
#env.Program('driver1.ex',['driver1.cpp','../InterleavedAccessor/src/InterleavedAccessor.cpp','../InterleavedAccessor/src/BSQAccessor.cpp','../InterleavedAccessor/src/BILAccessor.cpp','../InterleavedAccessor/src/BIPAccessor.cpp','../DataAccessor/src/DataAccessor.cpp','../DataAccessor/src/DataAccessorCaster.cpp','../DataAccessor/src/DataAccessorNoCaster.cpp','../DataCaster/src/DoubleToFloatCaster.cpp','../DataCaster/src/FloatToDoubleCaster.cpp','../Factories/src/CasterFactory.cpp','../Factories/src/InterleavedFactory.cpp','../Factories/src/AccessorFactory.cpp'])
#imageApiInc = buildDir + '/components/iscesys/ImageApi/include'
listFiles = ['test1.f90']
lib = env.Library(target = 'test1', source = listFiles)
libList = ['test1','InterleavedAccessor','DataAccessor']
env.PrependUnique(LIBS = libList)
module = env.LoadableModule(target = 'test1module.so', source = 'test1.cpp') 
